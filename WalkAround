-- die
_G.on = true

local spawnParentName = nil

local function GetParentsName()
    for _, descendant in ipairs(game.Workspace:GetDescendants()) do
        if descendant:IsA("BasePart") and descendant.Name == "Spawn" then
            spawnParentName = descendant.Parent and descendant.Parent.Name or "No Parent"
            break
        end
    end

    if spawnParentName then
        print("Found the 'Spawn' part's parent. Its name is: " .. spawnParentName)
    else
        print("Did not find the 'Spawn' part in Workspace.")
    end

    -- Check if spawnParentName has changed
    if spawnParentName ~= previousSpawnParentName then
        previousSpawnParentName = spawnParentName
        wait(3)
        local spawnParentName = nil

		for _, descendant in ipairs(game.Workspace:GetDescendants()) do
			if descendant:IsA("BasePart") and descendant.Name == "Spawn" then
				spawnPartPosition = descendant.Parent and descendant.Position or "No Parent"
				break
			end
		end
		
		
		local player = game.Players.LocalPlayer
		local character = player.Character
		print(spawnParentName)
		character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(spawnPartPosition)
    end
end

GetParentsName()


local radius = 150
while _G.on == true do
	GetParentsName()
	local targetPart = workspace:FindFirstChild(spawnParentName).Spawn.Position -- Get the target position
	local randomOffset = Vector3.new(math.random(-radius, radius), 0, math.random(-radius, radius))
	local newRandom = targetPart + randomOffset
	
	game.Players.LocalPlayer.Character.Humanoid:MoveTo(newRandom)
	wait(6)
end
